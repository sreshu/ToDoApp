{"ast":null,"code":"var _jsxFileName = \"/home/reshu/react-todo-app-reshu/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TodoForm, \"4bB8PA6vI65WiV8dMZT00Ka0B5A=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/reshu/react-todo-app-reshu/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAX,IAAAA,KAAK,CAACY,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEhB;AAFO,KAAf;AAMAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAGD,GAZD;;AAaE,sBAAO;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEQ,YAAtC;AAAA,4BACG;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,WAAW,EAAC,YADZ;AAEA,MAAA,KAAK,EAAET,KAFP;AAGA,MAAA,IAAI,EAAC,MAHL;AAIA,MAAA,SAAS,EAAC,YAJV;AAKA,MAAA,QAAQ,EAAEK,YALV;AAMA,MAAA,GAAG,EAAIH;AANP;AAAA;AAAA;AAAA;AAAA,YADH,eAUG;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaD;;GAvCQJ,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nfunction TodoForm(props) {\nconst [input, setInput] = useState('');\n\nconst inputRef = useRef(null)\n\nuseEffect(() => {\n  inputRef.current.focus()\n})\n\nconst handleChange = e => {\n  setInput(e.target.value)\n}\n\nconst handleSubmit = e => {\n  e.preventDefault();\n\n  props.onSubmit({\n    id: Math.floor(Math.random() * 10000),\n    text: input\n  })\n\n\n  setInput('')\n\n\n};\n  return <form className='todo-form' onSubmit={handleSubmit}>\n            <input type='text' \n            placeholder='Add a todo' \n            value={input} \n            name='text' \n            className='todo-input'\n            onChange={handleChange}\n            ref = {inputRef}\n            />\n\n            <button className='todo-button'>Add todo</button>\n\n  </form>\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}