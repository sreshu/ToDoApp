{"ast":null,"code":"var _jsxFileName = \"/home/reshu/react-todo-app-reshu/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/reshu/react-todo-app-reshu/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","removeTodo","id","removeArr","filter","completeTodo","updatedTodos","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAG;AAEnB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,GAAGH,KAArB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AAEH,GAbD;;AAeA,QAAMG,UAAU,GAAGC,EAAE,IAAG;AACpB,UAAMC,SAAS,GAAG,CAAC,GAAGX,KAAJ,EAAWY,MAAX,CAAkBT,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAYA,EAAtC,CAAlB;AAEAT,IAAAA,QAAQ,CAACU,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGH,EAAE,IAAG;AACtB,QAAII,YAAY,GAAGd,KAAK,CAACe,GAAN,CAAUZ,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACO,EAAL,KAAYA,EAAhB,EAAmB;AACfP,QAAAA,IAAI,CAACa,UAAL,GAAkB,CAACb,IAAI,CAACa,UAAxB;AACH;;AAED,aAAOb,IAAP;AACH,KANkB,CAAnB;AAOAF,IAAAA,QAAQ,CAACa,YAAD,CAAR;AACH,GATD;;AAUF,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEZ;AAApB;AAAA;AAAA;AAAA;AAAA,YAJG,eAKH,QAAC,IAAD;AACC,MAAA,KAAK,EAAEF,KADR;AAEC,MAAA,YAAY,EAAEa;AAFf;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUD;;GA7CQd,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n\n    const [todos, setTodos] = useState([])\n\n    const addTodo = todo =>{\n\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n        console.log(todo, ...todos);\n\n        setTodos(newTodos)\n\n    }\n\n    const removeTodo = id =>{\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id =>{\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id){\n                todo.isComplete = !todo.isComplete\n            }\n\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n  return <div>\n      <h1>\n          What's the plan for today?\n      </h1>\n      <TodoForm onSubmit={addTodo}/>\n      <Todo \n       todos={todos}\n       completeTodo={completeTodo}/>\n\n  </div>;\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}